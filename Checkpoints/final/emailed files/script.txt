'use strict';

class Blog extends React.Component {
  constructor(props) {
    super(props);

    this.state = {
      list: []
    }

    //this.componentDidMount = this.componentDidMount.bind(this);
  }

//http://api.wunderground.com/api/91ae09d6dd3707f8/conditions/q/NY/New_York.json
//http://api.wunderground.com/api/91ae09d6dd3707f8/conditions/q/CA/Los_Angeles.json
//http://api.wunderground.com/api/91ae09d6dd3707f8/conditions/q/IL/Chicago.json

  componentDidMount() {
    const proxyurl = "https://cors-anywhere.herokuapp.com/";
    const dataList = [];
    const cityList = [
      [42.3601,-71.0589],//["New_York", "NY"],
      [37.8267,-122.4233]//["Los_Angeles", "CA"],
      //["Chicago", "IL"],
      //["Philadelphia", "PA"],
      //["Dallas", "TX"],
      //["San_Francisco", "CA"],
      //["Houston", "TX"],
      //["Washington","DC"],
      //["Boston","MA"],
      //["Detroit","MI"]
    ];
    for(let i=0; i<2; i++){
      const url = `https://api.darksky.net/forecast/84e636b4f181398b4c799662fd1d9914/${cityList[i][0]},${cityList[i][1]}`;
      //console.log("URL: ",url);
    fetch(proxyurl+url).then((result) => {
      return result.json();
      //debugger;
    }).then((response) => {
      //debugger;
      dataList.push(response);
      this.setState({
        list: dataList
      })
      console.log("testing mount");
      console.log(this.state);
      //debugger;
    });
  }
}

/* When the user clicks on the button,
toggle between hiding and showing the dropdown content */
myFunction() {
    document.getElementById("myDropdown").classList.toggle("show");
}

render() {
  if (this.state.list.length !== 0) {
  console.log("First things in list: ",this.state.list[0].latitude);
}

  return (
    <div>
      <header>
        <h1>Quick Weather</h1>
      </header>
      {this.state.list[0].latitude}
      {/*<div className="dropdown">
        <button onClick={this.myFunction} className="dropbtn">Dropdown</button>
        <div id="myDropdown" className="dropdown-content">
          <a href="#">{this.state.list[0].current_observation.display_location.full}</a>
          <a href="#">{/*this.state.list[1].current_observation.display_location.full}</a>
          <a href="#">{/*this.state.list[2].current_observation.display_location.full}</a>
        </div>
      </div>*/}
    </div>
  )

}
}

ReactDOM.render(<Blog />, document.getElementById('blog'));
